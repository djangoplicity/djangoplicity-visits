"""
Django settings for test project.

Generated by 'django-admin startproject' using Django 1.11.21.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from distutils.sysconfig import get_python_lib

# We can't use ugettext from django.utils.translation as it will itself
# load the settings resulting in a ImproperlyConfigured error
ugettext = lambda s: s

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DJANGOPLICITY_ROOT = '{}/djangoplicity'.format(get_python_lib())
DJANGOPLICITY_VISIT_ROOT = os.path.join(BASE_DIR, 'djangoplicity', 'visits')
TMP_DIR = os.path.join(BASE_DIR, 'tmp')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')o0n4t(00@de#j2h77p%3u#t$vfpg266nwdb42kw%q9ca283!0'

SHORT_NAME = 'visits'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
DJANGOPLICITY_APPS = [
    'djangoplicity',
    'djangoplicity.menus',
    'djangoplicity.reports',
    'djangoplicity.pages',
    'djangoplicity.media',
    'djangoplicity.archives',
    'djangoplicity.archives.contrib.security',
    'djangoplicity.announcements',
    'djangoplicity.science',
    'djangoplicity.releases',
    'djangoplicity.metadata',
    'djangoplicity.adminhistory',
    'djangoplicity.utils',
    'djangoplicity.celery',
    'djangoplicity.iframe',
    'djangoplicity.admincomments',
    'djangoplicity.simplearchives',
    'djangoplicity.actions',
    'djangoplicity.cutter',
    'djangoplicity.visits',
]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.redirects',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
]

THIRD_PARTY_APPS = [
    'test_project',
    'tinymce',
    'pipeline',
    'debug_toolbar',
    'crispy_forms',
]

INSTALLED_APPS = DJANGO_APPS + DJANGOPLICITY_APPS + THIRD_PARTY_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]
DEBUG_TOOLBAR = True

def show_toolbar(request):
    # The default callback checks if the IP is internal, but docker's IP
    # addresses are not in INTERNAL_IPS, so we force the display in dev mode
    return True


DEBUG_TOOLBAR_CONFIG = {
    'INTERCEPT_REDIRECTS': False,
    'SHOW_TOOLBAR_CALLBACK': show_toolbar,
    'SKIP_TEMPLATE_PREFIXES': (
        'django/forms/widgets/',
        'admin/widgets/',
        'menus/',
        'pipeline/',
    ),
}

# DEBUG TOOLBAR
DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    # 'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    # 'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
]

ROOT_URLCONF = 'test_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'test_project', 'templates'),
            "{}/templates".format(DJANGOPLICITY_VISIT_ROOT),
            "{}/templates".format(DJANGOPLICITY_ROOT)
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'builtins': [
                'djangoplicity.pages.templatetags.layout',
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'djangoplicity.utils.context_processors.project_environment',
                'djangoplicity.utils.context_processors.google_analytics_id',
                'djangoplicity.utils.context_processors.djangoplicity_environment',
                'djangoplicity.archives.context_processors.internal_request'
            ],
        },
    },
]

WSGI_APPLICATION = 'test_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'djangoplicity-visits',
        'USER': 'djangoplicity-visits',
        'PASSWORD': 'djangoplicity-visits',
        'HOST': 'djangoplicity-visits-db',
        'PORT': '5432',
    }
}

if os.environ.get('GITHUB_WORKFLOW'):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'djangoplicity-visits',
            'USER': 'djangoplicity-visits',
            'PASSWORD': 'djangoplicity-visits',
            'HOST': '127.0.0.1',
            'PORT': '5432',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGES = (
    ('en', ugettext('English')),
)

LANGUAGE_CODE = 'en'

SITE_ID = 1

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

if USE_I18N:
    INSTALLED_APPS += [
        'djangoplicity.translation',
    ]

    MIDDLEWARE += [
        # Sets local for request based on URL prefix.
        'djangoplicity.translation.middleware.LocaleMiddleware',  # Request/Response
    ]
# STATIC FILES (CSS, JavaScript, Images)
# See: https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# JAVASCRIPT CUSTOM CONFIG
JQUERY_JS = "jquery/jquery-1.11.1.min.js"
JQUERY_UI_JS = "jquery-ui-1.12.1/jquery-ui.min.js"
JQUERY_UI_CSS = "jquery-ui-1.12.1/jquery-ui.min.css"
DJANGOPLICITY_ADMIN_CSS = "djangoplicity/css/admin.css"
DJANGOPLICITY_ADMIN_JS = "djangoplicity/js/admin.js"
SUBJECT_CATEGORY_CSS = "djangoplicity/css/widgets.css"

IMAGES_ARCHIVE_ROOT = 'archives/images/'
VIDEOS_ARCHIVE_ROOT = 'archives/videos/'
SCIENCEANNOUNCEMENTS_ARCHIVE_ROOT = 'archives/science/'
RELEASE_ARCHIVE_ROOT = 'archives/releases/'

# Hashids salt, used to encrype/decrypt Contacts' UIDs
HASHIDS_SALT = 'UbKopIrheasdGiwrked'
HASHIDS_ALPHABET = 'abcdefghijkmnopqrstuvwxyz123456789'
HASHIDS_ALPHABET_UPPER = 'ABCDEFGHJKMNPQRSTUVWXYZ123456789'


PIPELINE = {
    'STYLESHEETS': {
        'main': {
            'source_filenames': (
                'font-awesome/css/font-awesome.min.css',
                'sprites/sprites.css',
                'css/bootstrap.3.1.1.css',
                'css/noirlab.css',
                'css/app.css',
            ),
            'output_filename': 'css/main.css',
        },
        'extras': {
            'source_filenames': (
                'jquery-ui-1.12.1/jquery-ui.min.css',
                'slick-1.5.0/slick/slick.css',
                'justified/css/jquery.justified.css',
                'magnific-popup/magnific-popup.css',
            ),
            'output_filename': 'css/extras.css',
        },
    },
    'JAVASCRIPT': {
        'main': {
            'source_filenames': (
                'jquery/jquery-1.11.1.min.js',
                'jquery-ui-1.12.1/jquery-ui.min.js',
                'bootstrap/bootstrap-3.1.1-dist/js/bootstrap.min.js',
                'js/jquery.menu-aim.js',
                'slick-1.5.0/slick/slick.min.js',
                'djangoplicity/jwplayer/jwplayer.js',
                'djangoplicity/js/jquery.beforeafter-1.4.js',
                'js/masonry.pkgd.min.js',
                'justified/js/jquery.justified.min.js',
                'magnific-popup/jquery.magnific-popup.min.js',
                'djangoplicity/js/widgets.js',
                'djangoplicity/js/pages.js',
                'djangoplicity/js/djp-jwplayer.js',
                'js/picturefill.min.js',
                'js/enquire/enquire.min.js',
                'js/sorttable.js',
                'js/noirlab.js',
            ),
            'output_filename': 'js/main.js',
        },
        'ie8compat': {
            'source_filenames': (
                'js/ie8compat/matchMedia/matchMedia.js',
                'js/ie8compat/matchMedia/matchMedia.addListener.js',
            ),
            'output_filename': 'js/ie8compat.js',
        },
        'openseadragon': {
            'source_filenames': (
                'djangoplicity/openseadragon/openseadragon.min.js',
            ),
            'output_filename': 'js/openseadragon.js',
        },
    },
    'CSS_COMPRESSOR': 'pipeline.compressors.cssmin.CSSMinCompressor',
    'JS_COMPRESSOR': 'pipeline.compressors.uglifyjs.UglifyJSCompressor',
    'DISABLE_WRAPPER': True,
}

# TINYMCE
TINYMCE_DEFAULT_CONFIG = {
    'height': 360,
    'width': 'auto',
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 20,
    'selector': 'textarea',
    'theme': 'modern',
    'plugins': '''
        textcolor save link image media preview codesample table
        code lists fullscreen  insertdatetime  nonbreaking contextmenu
        directionality searchreplace wordcount visualblocks visualchars
        code fullscreen autolink lists  charmap print  hr anchor pagebreak
    ''',
    'toolbar1': '''
        fullscreen code | cut copy | searchreplace | alignleft aligncenter alignright alignjustify | formatselect forecolor backcolor | superscript subscript |
     ''',
    'toolbar2': '''
        bold italic underline strikethrough | bullist numlist table hr | indent outdent | undo redo | link unlink anchor image media charmap | nonbreaking |
    ''',
    'contextmenu': 'formats | link image',
    'menubar': False,
    'statusbar': True,
    'entity_encoding': 'raw',
    'convert_urls': False,
}

# Crispy form
CRISPY_TEMPLATE_PACK = 'bootstrap3'

# mailtrap service
EMAIL_HOST = 'smtp.mailtrap.io'
EMAIL_HOST_USER = '9bf800ee730746'
EMAIL_HOST_PASSWORD = 'f3162e99c9f248'
EMAIL_PORT = '2525'
